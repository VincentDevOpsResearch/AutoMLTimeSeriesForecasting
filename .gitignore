# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
cover/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
.pybuilder/
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
# .python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# UV
#   Similar to Pipfile.lock, it is generally recommended to include uv.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#uv.lock

# poetry
#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
#poetry.lock

# pdm
#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.
#pdm.lock
#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it
#   in version control.
#   https://pdm.fming.dev/latest/usage/project/#working-with-version-control
.pdm.toml
.pdm-python
.pdm-build/

# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# Cython debug symbols
cython_debug/

# PyCharm
#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can
#  be found at https://github.com/github/gitignore/blob/main/Global/JetBrains.gitignore
#  and can be added to the global gitignore or merged into this file.  For a more nuclear
#  option (not recommended) you can uncomment the following to ignore the entire idea folder.
#.idea/

# PyPI configuration file
.pypirc


# .NET Core / .NET 6+ / ASP.NET Core

## Ignore Visual Studio temporary files, build results, and
## files generated by popular Visual Studio extensions.

# User-specific files
*.rsuser
*.suo
*.user
*.userosscache
*.sln.docstates

# User-specific files (MonoDevelop/Xamarin Studio)
*.userprefs

# Build results
[Dd]ebug/
[Dd]ebugPublic/
[Rr]elease/
[Rr]eleases/
x64/
x86/
[Aa][Rr][Mm]/
[Aa][Rr][Mm]64/
bld/
*/[Bb]in/
[Oo]bj/
[Ll]og/
[Ll]ogs/

# Visual Studio 2019+
.vscode/

# External dependencies
lib/
libs/
packages/
*.nupkg
*.snupkg
*.nuspec

# Test results
[Tt]est[Rr]esult*/
[Tt]est[Rr]esults/

# Build Reports
msbuild.log
msbuild.err
msbuild.wrn

# Include node_modules and other Web projects files
**/node_modules/

# Windows image file caches
Thumbs.db
ehthumbs.db

# Folder config file
Desktop.ini

# Recycle Bin used on file shares
$RECYCLE.BIN/

# Temporary files
*.tmp
*.temp
~$*
*.~*

# Code coverage results
*.coverage
*.coveragexml
coverage*.json
coverage*.xml
coverage*.info

# Microsoft Office Temp Files
~$*.docx
~$*.xlsx
~$*.pptx

# Dotnet Core
project.lock.json
project.assets.json
# Comment to exclude project.json if your project uses it
#!project.json
*.dotnet-cli.json
.vs/
.vsscc
.vsconfig
.vscode/
_build/
.*.sln.ide
#NCrunch
.ncrunchsolution
.ncrunchproject
# ASP.NET Scaffolding
ScaffoldingReadMe.txt

# ASP.NET SignalR
*.db

# Entity Framework
*_MigrationHistory*
*.mdf
*.ldf

# Xamarin
*.apk
*.aab
*.ipa
*.app/
*.xcodeproj/
*.xcworkspace/
*.xcuserstate

# Windows Store app package
AppPackages/
BundleArtifacts/

# Windows application packaging project
.wapproj/
.bundle/
.appx/
.appxbundle/
.appxupload/

# Docker
**/Dockerfile
**/docker-compose*
**/.dockerignore

# Azure DevOps
.azure-pipelines.yml

# JetBrains Rider
.idea/
*.sln.iml

# Local history for Visual Studio
.sqlproj.user

# Backup & report files
*_backup_*.*
*.htm
*.html

# NuGet
.nuget/

# Globally ignored files
*.log
*.swp
*.swo
*.bak
*.orig

# Rider / ReSharper
.idea/
*.dotSettings
*.dotSettings.user
resharper.xml
*_Resharper.xml
*.ncrunchproject
.ncrunchsolution
_resharper/
_ReSharper.Caches/

# StyleCop
*.StyleCop.Cache

# Roslyn generated files
Generated_Code/

# Godot
.import/

# Localization
*.resx

# .NET Core / .NET Standard
**/project.lock.json
**/project.assets.json
**/packages.lock.json
**/obj/
**/bin/

# Publish outputs
publish/
out/
AppPackages/
BundleArtifacts/
.nuget/

# Python
__pycache__/
*.py[cod]
*$py.class
db.sqlite3
*.so

# Node
node_modules/

# Logs
*.log

# Editors
*.vs/

# Temp files
*.tmp

# IDE configs
*.ide

# Others
*.bak
*.swp
